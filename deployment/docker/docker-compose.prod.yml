version: '3.8'

services:
  # SnapFit AI 应用 - 生产环境
  snapfit-ai:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - KEY_ENCRYPTION_SECRET=${KEY_ENCRYPTION_SECRET}
      - LINUX_DO_CLIENT_ID=${LINUX_DO_CLIENT_ID}
      - LINUX_DO_CLIENT_SECRET=${LINUX_DO_CLIENT_SECRET}
      - LINUX_DO_REDIRECT_URI=${LINUX_DO_REDIRECT_URI}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - DEFAULT_OPENAI_API_KEY=${DEFAULT_OPENAI_API_KEY}
      - DEFAULT_OPENAI_BASE_URL=${DEFAULT_OPENAI_BASE_URL:-https://api.openai.com}
    env_file:
      - .env.production
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - snapfit-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - snapfit-ai
    restart: unless-stopped
    networks:
      - snapfit-network

networks:
  snapfit-network:
    driver: bridge
