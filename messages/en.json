{
  "common": {
    "save": "Save",
    "cancel": "Cancel",
    "delete": "Delete",
    "edit": "Edit",
    "add": "Add",
    "confirm": "Confirm",
    "clear": "Clear",
    "loading": "Loading...",
    "error": "Error",
    "success": "Success",
    "warning": "Warning",
    "info": "Info",
    "close": "Close",
    "back": "Back",
    "next": "Next",
    "previous": "Previous",
    "search": "Search",
    "export": "Export",
    "import": "Import",
    "refresh": "Refresh",
    "upload": "Upload",
    "download": "Download",
    "send": "Send",
    "sending": "Sending...",
    "optional": "Optional",
    "required": "Required",
    "yes": "Yes",
    "no": "No",
    "blockedDomain": "Blocked Domain"
  },
  "navigation": {
    "home": "Home",
    "chat": "AI Chat",
    "settings": "Settings",
    "signIn": "Sign In",
    "signOut": "Sign Out",
    "toggleTheme": "Toggle theme",
    "theme": "Theme",
    "language": "Language",
    "sharedServices": "Shared Services",
    "loginRequired": "Please login to view your configurations",
    "canUseSharedService": "Can use shared services",
    "usageToday": "Today's Usage",
    "totalUsage": "Total Usage",
    "userMenu": {
      "settings": "Settings",
      "sharedServices": "Shared Services",
      "signOut": "Sign Out",
      "signIn": "Sign In"
    },
    "insufficientPermission": "Insufficient Permission",
    "usage": {
      "dailyQuota": "Daily Conversation Quota",
      "updatedAt": "Updated at",
      "remaining": "Remaining",
      "times": "times",
      "loading": "Loading...",
      "loadingUsage": "Loading usage...",
      "quotaSufficient": "Quota sufficient",
      "quotaRunningLow": "Quota running low",
      "quotaAlmostExhausted": "Quota almost exhausted",
      "quotaExhausted": "Daily quota exhausted",
      "todayConversation": "Today's conversation",
      "usedPercentage": "Used",
      "canConverse": "You can still have",
      "conversationsLeft": "conversations",
      "quotaExhaustedMessage": "Daily conversation quota exhausted. Please come back tomorrow or upgrade your trust level for more quota",
      "refreshUsage": "Refresh usage",
      "retry": "Retry",
      "cannotLoadUsage": "Cannot load usage",
      "weeklyStats": "7-day Stats",
      "totalConversations": "Total conversations",
      "averageDaily": "Daily average",
      "upgradePrompt": "Running low on quota? Upgrade your trust level for more quota!",
      "nextLevelQuota": "Next level provides"
    }
  },
  "app": {
    "title": "SnapFit AI",
    "subtitle": "Smart Health Management Assistant",
    "description": "Your personal health management and nutrition analysis assistant"
  },
  "dashboard": {
    "title": "Health Dashboard",
    "selectDate": "Select Date",
    "today": "Today",
    "addFood": "Add Food",
    "addExercise": "Add Exercise",

    "dailySummary": "Daily Summary",
    "weeklyTrend": "Weekly Trend",
    "monthlyOverview": "Monthly Overview",
    "caloriesConsumed": "Calories Consumed",
    "caloriesBurned": "Calories Burned",
    "netCalories": "Net Calories",
    "macronutrients": "Macronutrients",
    "micronutrients": "Micronutrients",
    "weight": "Weight",
    "activityLevel": "Activity Level",
    "bmr": "BMR",
    "tdee": "TDEE",
    "inputPlaceholder": "Describe your food or exercise, or upload images...",
    "uploadImages": "Upload Images",
    "processing": "Processing...",
    "addEntry": "Add Entry",
    "errors": {
      "aiConfigIncomplete": "AI Configuration Incomplete",
      "configureModelFirst": "Please configure the {modelType} model in settings first.",
      "imageCountExceeded": "Image Count Exceeded",
      "maxImagesAllowed": "Maximum 5 images allowed.",
      "invalidFileType": "Invalid File Type",
      "notImageFile": "{fileName} is not an image file.",
      "imageProcessingFailed": "Image Processing Failed",
      "cannotProcessImages": "Unable to process uploaded images.",
      "emptyInput": "Empty Input",
      "enterTextOrUpload": "Please enter text or upload images."
    },
    "modelTypes": {
      "vision": "vision",
      "work": "agent"
    },
    "success": {
      "recordAdded": "Record Added",
      "foodAdded": "Food record added successfully.",
      "exerciseAdded": "Exercise record added successfully.",
      "recordDeleted": "Record Deleted",
      "foodDeleted": "Food record deleted successfully.",
      "exerciseDeleted": "Exercise record deleted successfully.",
      "recordUpdated": "Record Updated",
      "foodUpdated": "Food record updated successfully.",
      "exerciseUpdated": "Exercise record updated successfully.",
      "weightSaved": "Weight Saved",
      "weightSavedDesc": "Weight for {date} has been recorded as {weight} kg.",
      "weightCleared": "Weight Cleared",
      "weightClearedDesc": "Weight record for {date} has been cleared."
    },
    "validation": {
      "invalidWeight": "Invalid Weight",
      "invalidWeightDesc": "Please enter a valid positive number for weight."
    },
    "handleSaveDailyWeight": {
      "success": {
        "title": "Weight Saved",
        "description": "Weight has been recorded as {weight} kg"
      },
      "error": {
        "title": "Invalid Weight",
        "description": "Please enter a valid positive number for weight."
      }
    },
    "handleDeleteEntry": {
      "success": {
        "title": "Deletion Successful",
        "description": "The entry has been deleted"
      }
    },
    "handleUpdateEntry": {
      "success": {
        "title": "Update Successful",
        "description": "The entry has been updated"
      }
    },
    "handleSubmit": {
      "success": {
        "title": "Record Successful",
        "description": "Added {foodCount} food items and {exerciseCount} exercise items"
      },
      "error": {
        "title": "Processing Failed",
        "description": "{error}"
      }
    },
    "handleDailyActivityLevelChange": {
      "success": {
        "title": "Activity Level Updated",
        "description": "Activity level has been set to {level}"
      }
    },
    "smartSuggestions": {
      "noData": {
        "title": "Insufficient Data",
        "description": "Not enough data for {date} to generate suggestions."
      },
      "error": {
        "title": "Suggestion Generation Failed",
        "description": "Unable to generate smart suggestions, please try again later."
      },
      "unknownError": {
        "title": "Unknown Error",
        "description": "An unknown error occurred while generating suggestions."
      },
      "success": {
        "title": "Suggestions Updated",
        "description": "New smart suggestions have been generated for {date}."
      }
    },
    "ui": {
      "subtitle": "Record your health data and get smart recommendations",
      "todayWeight": "Today's Weight (Kg)",
      "recordWeightChanges": "Track your weight changes",
      "saveWeight": "Save Weight",
      "activityLevel": "Activity Level",
      "setTodayActivity": "Set today's activity intensity",
      "selectActivityLevel": "Select activity level",
      "recordHealthData": "Record Health Data",
      "recordHealthDataDesc": "Enter your diet or exercise records, intelligently identify nutrition and consumption",
      "dietRecord": "Diet Record",
      "exerciseRecord": "Exercise Record",
      "dailyStatus": "Daily Status",
      "recordDailyStatus": "Record Today's Status",
      "recordDailyStatusDesc": "Record your stress, mood, health condition and sleep times",
      "submitRecord": "Submit Record",
      "myMeals": "My Meals",
      "todayFoodCount": "Recorded {count} food items today",
      "noFoodRecords": "No food records",
      "addFoodAbove": "Please add your today's diet above",
      "myExercise": "My Exercise",
      "todayExerciseCount": "Recorded {count} exercise items today",
      "noExerciseRecords": "No exercise records",
      "addExerciseAbove": "Please add your today's workout above",
      "quickConfig": "Quick Config",
      "dataExport": "Data Export",
      "neverExported": "Backup recommended",
      "exportReminder": "{days} days since backup",
      "generatePrompt": "Record more data to get personalized suggestions.",
      "addMoreData": "Add more data to get personalized advice",
      "todayRecords": "Today's Records",
      "todayData": "Today's Data",
      "dataCharts": "Data Charts",
      "diet": "Diet",
      "exercise": "Exercise",
      "status": "Status",
      "healthDisclaimer": "This application is powered by AI technology and is intended solely as a reference tool for health management. Please note: AI analysis may contain inaccuracies, especially regarding nutritional data. Your health is important. Before making significant dietary or exercise decisions, we recommend consulting with professional doctors, nutritionists, or fitness trainers.",
      "refreshing": "Syncing",
      "refresh": "Refresh"
    },
    "dailyStatus": {
      "stress": "Stress Level",
      "mood": "Mood State",
      "health": "Health Condition",
      "sleepTime": "Sleep Time",
      "bedTime": "Bedtime",
      "wakeTime": "Wake Time",
      "sleepQuality": "Sleep Quality",
      "stressNotes": "Stress Notes",
      "moodNotes": "Mood Notes",
      "healthNotes": "Health Notes",
      "sleepNotes": "Sleep Notes",
      "levels": {
        "1": "Very Poor",
        "2": "Poor",
        "3": "Fair",
        "4": "Good",
        "5": "Very Good",
        "6": "Excellent"
      },
      "placeholders": {
        "stress": "Describe today's stress sources or feelings...",
        "mood": "Share today's mood state...",
        "health": "Record physical feelings or symptoms...",
        "sleep": "Record sleep quality or related conditions..."
      },
      "timeFormat": "HH:MM",
      "bedTimePlaceholder": "e.g., 23:30",
      "wakeTimePlaceholder": "e.g., 07:00"
    },
    "activityLevels": {
      "sedentary": "Sedentary (Office work)",
      "light": "Lightly Active (Light exercise)",
      "moderate": "Moderately Active (Regular exercise)",
      "active": "Very Active (Daily exercise)",
      "very_active": "Extremely Active (Intense training)"
    },
    "placeholders": {
      "foodExample": "e.g., Breakfast: a bowl of oatmeal, an egg, 5 cherry tomatoes; Lunch: chicken breast salad, half corn...",
      "exerciseExample": "e.g., Afternoon: 30-minute 5km run, Evening: 20-minute HIIT training...",
      "weightExample": "e.g., 70.5"
    },
    "buttons": {
      "uploadImages": "Upload Images",
      "clearImages": "Clear Images",
      "submitRecord": "Submit Record",
      "processing": "Processing...",
      "imageProcessing": "Processing images..."
    },
    "images": {
      "uploaded": "Uploaded {count} images (max 5)",
      "preview": "Preview {index}",
      "deleteImage": "Delete image"
    },
    "loading": {
      "dataLoading": "Loading data, please wait..."
    },
    "charts": {
      "title": "Management Charts",
      "description": "{days} health data trend analysis",
      "demoDescription": "Demo data - Please record your health data first",
      "optimizedDisplay": "📊 Optimized display: Only showing periods with data ({count} days of valid data)",
      "loadingCharts": "Loading chart data...",
      "startRecording": "Start Recording Your Health Data",
      "recordingPrompt": "After recording weight, diet and exercise data, your real health trend charts will be displayed here",
      "demoDataNote": "Currently showing demo data",
      "weight": "Weight",
      "calories": "Calories",
      "exercise": "Exercise Burn",
      "deficit": "Calorie Deficit",
      "caloriesIn": "Calories In",
      "caloriesOut": "Exercise Burn",
      "calorieDeficit": "Calorie Deficit",
      "calorieSurplus": "Calorie Surplus",
      "dateRanges": {
        "7d": "7 days",
        "14d": "14 days",
        "30d": "30 days",
        "90d": "90 days"
      }
    },
    "summary": {
      "title": "Daily Summary",
      "description": "Overview of your diet and exercise data",
      "caloriesIn": "Calories In",
      "exerciseBurn": "Exercise Burn",
      "netCalories": "Net Calories",
      "estimatedDailyNeeds": "Estimated Daily Energy Requirements",
      "bmr": "Basal Metabolic Rate (BMR)",
      "tdee": "Total Daily Energy Expenditure (TDEE)",
      "calorieDeficitSurplus": "Calorie Deficit/Surplus",
      "calorieBalance": "Calorie Balance",
      "surplus": "Surplus {amount} kcal",
      "deficit": "Deficit {amount} kcal",
      "macronutrients": "Macronutrient Distribution",
      "carbohydrates": "Carbohydrates",
      "protein": "Protein",
      "fat": "Fat",
      "micronutrients": "Key Micronutrients",
      "tef": {
        "title": "TEF (Thermic Effect of Food)",
        "enhancementFactors": "Enhancement Factors",
        "caffeine": "Caffeine",
        "spicyFood": "Spicy Food",
        "coldDrink": "Cold Drink Thermogenesis",
        "metabolicEnhancers": "Metabolic Enhancers",
        "greenTeaCatechins": "Green Tea Catechins",
        "baseTEF": "Base TEF",
        "enhancedTEF": "Enhanced TEF",
        "noEnhancement": "No Enhancement",
        "enhancementFactorsLabel": "Enhancement Factors:",
        "analyzing": "Analyzing",
        "analyzingDescription": "Analyzing your meals to calculate personalized TEF...",
        "remainingTime": "{seconds} seconds remaining",
        "description": "TEF is the additional energy required to digest and metabolize food, {analyzed, select, true {personalized calculation based on AI analysis of your meals} other {will be automatically analyzed once food records are stable}}."
      }
    },
    "suggestions": {
      "title": "Smart Suggestions",
      "description": "Personalized suggestions based on your data",
      "loading": "Generating suggestions...",
      "refresh": "Regenerate",
      "noSuggestions": "No suggestions available",
      "generatePrompt": "Record more data to get personalized suggestions.",
      "addMoreData": "Add more data to get personalized advice",
      "generatedTime": "Generated Time"
    },
    "foodCard": {
      "foodName": "Food Name",
      "portion": "Portion (grams)",
      "mealType": "Meal Type",
      "timePeriod": "Time Period",
      "selectMealType": "Select meal type",
      "selectTimePeriod": "Select time period",
      "estimated": "Estimated",
      "calories": "Calories",
      "carbs": "Carbs",
      "protein": "Protein",
      "fat": "Fat",
      "grams": "g",
      "cancel": "Cancel",
      "save": "Save",
      "mealTypes": {
        "breakfast": "Breakfast",
        "lunch": "Lunch",
        "dinner": "Dinner",
        "snack": "Snack"
      },
      "unknown": "Unknown",
      "timePeriods": {
        "morning": "Morning",
        "noon": "Noon",
        "afternoon": "Afternoon",
        "evening": "Evening",
        "unknown": "Unknown Period"
      },
      "description": "Added {foodCount} food items and {exerciseCount} exercise items"
    },
    "exerciseCard": {
      "exerciseName": "Exercise Name",
      "duration": "Duration (minutes)",
      "minutes": "minutes",
      "calories": "Calories",
      "estimated": "Estimated",
      "cancel": "Cancel",
      "save": "Save",
      "sets": "sets",
      "reps": "reps",
      "distance": "km",
      "weight": "kg",
      "muscleGroups": "Muscle Groups",
      "timePeriod": "Time Period",
      "selectTimePeriod": "Select Time Period",
      "timePeriods": {
        "morning": "Morning",
        "noon": "Noon",
        "afternoon": "Afternoon",
        "evening": "Evening"
      }
    },
    "error": {
      "title": "Processing Failed",
      "description": "{error}"
    }
  },

  "summary": {
    "estimationNote": "These are estimates based on your personal information and daily activity level.",
    "title": "Daily Summary",
    "description": "Overview of your diet and exercise data",
    "backToHome": "Back to Home",
    "date": "Date",
    "noDataForDate": "No data available for this date",
    "calorieBalance": "Calorie Balance",
    "caloriesIn": "Calorie Intake",
    "exerciseBurn": "Exercise Burn",
    "netCalories": "Net Calories",
    "estimatedDailyNeeds": "Estimated Daily Energy Requirements",
    "bmr": "Basal Metabolic Rate (BMR)",
    "bmrDescription": "Minimum energy required to maintain basic physiological functions",
    "tdee": "Total Daily Energy Expenditure (TDEE)",
    "tdeeDescription": "Total energy expenditure including daily activities",
    "calorieDeficitSurplus": "Calorie Deficit/Surplus",
    "deficitSurplusDescription": "Calorie difference relative to target expenditure",
    "deficit": "Deficit {amount} kcal",
    "surplus": "Surplus {amount} kcal",
    "balanced": "Balanced",
    "smartSuggestions": "Smart Suggestions",
    "noFoodEntries": "No food entries for today",
    "noExerciseEntries": "No exercise entries for today",
    "generatedTime": "Generated Time",
    "screenshot": {
      "capture": "Save as Image",
      "capturing": "Capturing...",
      "success": "Screenshot Successful",
      "successDescription": "Health summary saved as image",
      "failed": "Screenshot Failed",
      "failedDescription": "Please try again later or use a different browser",
      "preparing": "Preparing screenshot...",
      "preparingDescription": "Generating high-quality screenshot with html-to-image",
      "savedAs": "Screenshot saved as",
      "failedRetry": "Screenshot failed, please refresh and try again"
    },
    "priorities": {
      "high": "High Priority",
      "medium": "Medium Priority",
      "low": "Low Priority"
    },
    "actionable": "Actionable",
    "loading": "Loading...",
    "branding": {
      "tagline": "AI Health Assistant",
      "slogan": "Smart health management made simple"
    }
  },
  "food": {
    "title": "Food Records",
    "name": "Food Name",
    "calories": "Calories",
    "protein": "Protein",
    "carbs": "Carbohydrates",
    "fat": "Fat",
    "fiber": "Fiber",
    "sugar": "Sugar",
    "sodium": "Sodium",
    "grams": "grams",
    "kcal": "kcal",
    "mg": "mg",
    "consumedAmount": "Consumed Amount",
    "totalCalories": "Total Calories",
    "addFood": "Add Food",
    "editFood": "Edit Food",
    "deleteFood": "Delete Food",
    "foodDetails": "Food Details"
  },
  "exercise": {
    "title": "Exercise Records",
    "name": "Exercise Name",
    "duration": "Duration",
    "calories": "Calories Burned",
    "intensity": "Intensity",
    "type": "Type",
    "minutes": "minutes",
    "hours": "hours",
    "low": "Low",
    "moderate": "Moderate",
    "high": "High",
    "cardio": "Cardio",
    "strength": "Strength Training",
    "flexibility": "Flexibility",
    "sports": "Sports",
    "addExercise": "Add Exercise",
    "editExercise": "Edit Exercise",
    "deleteExercise": "Delete Exercise",
    "exerciseDetails": "Exercise Details"
  },
  "chat": {
    "title": "AI Chat",
    "subtitle": "Chat with AI Health Assistant",
    "expertDescriptions": {
      "general": "SnapFit AI Health Assistant",
      "nutrition": "Registered Dietitian (RD)",
      "exercise": "SF Certified Exercise Physiologist",
      "metabolism": "Endocrine Metabolism Specialist",
      "behavior": "Behavioral Psychology Expert",
      "timing": "Chrono-nutrition Expert"
    },
    "selectExpert": "Select Expert",
    "includeHealthData": "Include Health Data",
    "clearHistory": "Clear History",
    "exportConversation": "Export Chat",
    "inputPlaceholder": "Enter your question...",
    "aiThinking": "AI is thinking...",
    "loading": "Loading...",
    "send": "Send",
    "sending": "Sending...",
    "welcomeMessage": "Welcome to Smart Health Assistant",
    "welcomeDescription": "You can ask any health, diet, or exercise related questions",
    "configureAI": "Please configure the chat model in settings first",
    "historyCleared": "Chat history cleared",
    "expertHistoryCleared": "{expert}'s chat history cleared",
    "startConversation": "Enter your question to start chatting with {expert}",
    "configureAIPrompt": "Please configure chat model in settings first",
    "experts": {
      "general": {
        "name": "General Assistant",
        "title": "SnapFit AI Health Assistant",
        "description": "Comprehensive health management assistant that can answer various health-related questions",
        "welcomeMessage": {
          "title": "Welcome to SnapFit AI",
          "subtitle": "Your comprehensive health consultant for nutrition, exercise, metabolism and wellness",
          "features": [
            "🎯 Analyze your health data",
            "💡 Personalized recommendations",
            "📋 Sustainable health plans",
            "🤝 Expert health guidance"
          ]
        }
      },
      "nutrition": {
        "name": "Nutritionist",
        "title": "Registered Dietitian (RD)",
        "description": "Specialized in macronutrient ratios, dietary structure optimization, and nutrient density analysis",
        "welcomeMessage": {
          "title": "Professional Nutrition Consultation",
          "subtitle": "Dr. Sarah Chen, RD specializing in sports nutrition and weight management",
          "features": [
            "🥗 Macronutrient ratio analysis",
            "📊 Food nutrient assessment",
            "🎯 Personalized meal plans",
            "⏰ Optimal nutrition timing"
          ]
        }
      },
      "exercise": {
        "name": "Exercise Expert",
        "title": "SF Certified Exercise Physiologist",
        "description": "Specialized in exercise prescription design, energy metabolism optimization, and training plan development",
        "welcomeMessage": {
          "title": "Professional Fitness Guidance",
          "subtitle": "Coach Mike Rodriguez, certified exercise physiologist for scientific training",
          "features": [
            "💪 Personalized exercise plans",
            "🎯 Aerobic/anaerobic optimization",
            "📊 Optimal intensity zones",
            "⚡ Exercise-nutrition strategies"
          ]
        }
      },
      "metabolism": {
        "name": "Metabolism Expert",
        "title": "Metabolic Endocrinology PhD",
        "description": "Specialized in basal metabolism, thermic effect of food, and precise analysis of metabolic syndrome",
        "welcomeMessage": {
          "title": "Metabolism Optimization",
          "subtitle": "Dr. Emily Watson, metabolism specialist for energy regulation optimization",
          "features": [
            "🔥 BMR/TDEE analysis",
            "⚡ TEF optimization",
            "🧬 Metabolic flexibility",
            "📊 Insulin sensitivity"
          ]
        }
      },
      "behavior": {
        "name": "Behavior Expert",
        "title": "Behavioral Psychology Expert",
        "description": "Specialized in health behavior change, habit formation, and scientific methods for motivation maintenance",
        "welcomeMessage": {
          "title": "Behavior Change Lab",
          "subtitle": "Dr. Alex Thompson, behavioral expert for sustainable healthy habits",
          "features": [
            "🧠 Behavior pattern analysis",
            "🔄 Change strategy design",
            "🏠 Environment optimization",
            "📈 Habit formation plans"
          ]
        }
      },
      "timing": {
        "name": "Timing Expert",
        "title": "Chrono-nutrition Expert",
        "description": "Specialized in biological rhythms, nutrient timing, and sleep-metabolism coordination optimization",
        "welcomeMessage": {
          "title": "Chrono-nutrition World",
          "subtitle": "Dr. Maria Gonzalez, timing expert for optimal biological rhythms",
          "features": [
            "⏰ Circadian rhythm sync",
            "🏃 Metabolic window timing",
            "🌙 Sleep-metabolism coordination",
            "📅 Personalized schedules"
          ]
        }
      }
    },
    "systemPrompts": {
      "general": "You are SnapFit AI, an experienced health management consultant. I have comprehensive knowledge in nutrition, exercise science, and behavioral psychology.\n\nMy mission is to help users achieve their health goals, whether it's weight loss, muscle building, fitness improvement, or developing healthy habits. I will:\n\n🎯 **My Expertise**:\n- Comprehensive analysis of users' nutrition, exercise, and metabolic data\n- Provide balanced and practical health advice\n- Help develop sustainable health plans\n- Answer various health questions\n\n💬 **My Communication Style**:\n- Communicate with users in a gentle and encouraging tone\n- Explain complex health knowledge in simple and understandable ways\n- Provide personalized advice based on users' actual data\n- Always prioritize users' health and safety\n\nPlease tell me your health concerns or goals, and I will provide the most suitable advice based on your data!"
    },
    "suggestions": {
      "categories": {
        "nutritionOptimization": "Nutrition Optimization",
        "exerciseOptimization": "Exercise Prescription Optimization",
        "metabolismEnhancement": "Metabolic Efficiency Enhancement",
        "behaviorOptimization": "Behavioral Habit Optimization",
        "timingOptimization": "Timing Optimization Strategy",
        "代谢调节优化": "Metabolic Regulation Optimization",
        "营养配比优化": "Nutrition Optimization",
        "运动处方优化": "Exercise Prescription Optimization",
        "行为习惯优化": "Behavioral Habit Optimization",
        "时机优化策略": "Timing Optimization Strategy"
      },
      "actionable": "Actionable",
      "analysisUnavailable": "Analysis temporarily unavailable"
    }
  },
  "settings": {
    "title": "Profile & Settings",
    "common": {
      "save": "Save",
      "cancel": "Cancel",
      "delete": "Delete",
      "edit": "Edit",
      "add": "Add",
      "confirm": "Confirm",
      "clear": "Clear",
      "loading": "Loading...",
      "error": "Error",
      "success": "Success",
      "warning": "Warning",
      "info": "Info",
      "close": "Close",
      "back": "Back",
      "next": "Next",
      "previous": "Previous",
      "search": "Search",
      "export": "Export",
      "import": "Import",
      "refresh": "Refresh",
      "upload": "Upload",
      "download": "Download",
      "send": "Send",
      "sending": "Sending...",
      "optional": "Optional",
      "required": "Required",
      "yes": "Yes",
      "no": "No"
    },
    "tabs": {
      "profile": "Personal Info",
      "goals": "Health Goals",
      "ai": "AI Configuration",
      "data": "Data Management"
    },
    "profile": {
      "title": "Personal Information",
      "description": "Update your personal information, this data will be used to calculate calorie consumption and provide personalized recommendations",
      "weight": "Weight (kg)",
      "height": "Height (cm)",
      "age": "Age",
      "gender": "Gender",
      "male": "Male",
      "female": "Female",
      "other": "Other",
      "activityLevel": "Daily Activity Level",
      "activityLevels": {
        "sedentary": "Sedentary",
        "light": "Lightly Active",
        "moderate": "Moderately Active",
        "active": "Very Active",
        "very_active": "Extremely Active"
      },
      "activityLevelDescription": "Set your usual activity level. This setting will be used as the default activity level for new dates, or as a fallback when you haven't specified an activity level for a specific date on the homepage.",
      "bmrCalculationBasisDescription": "Choose whether to use total body weight or lean body mass when calculating BMR. The latter is usually more accurate, but requires you to provide body fat percentage.",
      "saveProfile": "Save Personal Information",
      "saveSuccess": "Save Success",
      "saveSuccessDesc": "Your profile has been updated",
      "bmrFormula": "BMR Calculation Formula",
      "selectBmrFormula": "Select BMR calculation formula",
      "mifflinStJeor": "Mifflin-St Jeor",
      "harrisBenedict": "Harris-Benedict (Revised)",
      "bmrFormulaDescription": "Choose the formula used to calculate Basal Metabolic Rate (BMR).",
      "bmrCalculationBasis": "BMR Calculation Basis",
      "selectBmrBasis": "Select BMR calculation basis",
      "totalWeight": "Based on Total Weight",
      "leanBodyMass": "Based on Lean Body Mass (requires body fat %)",
      "bmrBasisDescription": "Choose whether to use total weight or lean body mass for BMR calculation. The latter is usually more accurate but requires you to provide body fat percentage.",
      "bodyFatPercentage": "Body Fat Percentage (%)",
      "bodyFatPlaceholder": "e.g., 15",
      "bodyFatDescription": "Please enter your body fat percentage. For example, enter 15 for 15%."
    },

    "buttons": {
      "save": "Save",
      "test": "Test",
      "export": "Export",
      "import": "Import",
      "clear": "Clear",
      "cancel": "Cancel",
      "confirm": "Confirm",
      "getModels": "Get Models",
      "testConnection": "Test Connection",
      "saveProfile": "Save Profile",
      "saveGoals": "Save Health Goals",
      "saveAIConfig": "Save AI Config",
      "exportAllData": "Export All Data",
      "clearAllData": "Clear All Data",
      "confirmClear": "Confirm Clear"
    },
    "actions": {
      "getModels": "Get Models",
      "testConnection": "Test Connection",
      "saveProfile": "Save Profile",
      "saveGoals": "Save Health Goals",
      "saveAIConfig": "Save AI Config",
      "exportAllData": "Export All Data",
      "clearAllData": "Clear All Data",
      "confirmClear": "Confirm Clear",
      "selectGoal": "Select Goal"
    },
    "messages": {
      "getSuccess": "Get Success",
      "getFailed": "Get Failed",
      "testSuccess": "Test Success",
      "testFailed": "Test Failed",
      "saveSuccess": "Save Success",
      "exportSuccess": "Export Success",
      "exportFailed": "Export Failed",
      "importSuccess": "Import Success",
      "importFailed": "Import Failed",
      "clearSuccess": "Clear Success",
      "clearFailed": "Clear Failed",
      "modelsFound": "Successfully retrieved {count} available models",
      "modelConnectionOk": "{modelType} model connection is normal",
      "modelConnectionFailed": "{modelType} model connection failed, please check configuration",
      "profileSaved": "Your profile has been updated",
      "aiConfigSaved": "AI model configuration has been updated",
      "dataExported": "Your health data has been exported as a JSON file",
      "dataImported": "Your health data has been successfully imported",
      "dataCleared": "All health log data has been cleared",
      "modelsAvailable": "Retrieved {count} available models"
    },
    "goals": {
      "title": "Health Goals",
      "description": "Set your health goals, and the AI assistant will provide personalized recommendations based on your objectives",
      "goalType": "Goal Type",
      "selectGoal": "Select Goal",
      "loseWeight": "Lose Weight",
      "maintain": "Maintain Weight",
      "gainWeight": "Gain Weight",
      "buildMuscle": "Build Muscle",
      "improveHealth": "Improve Health",
      "targetWeight": "Target Weight (kg)",
      "targetCalories": "Target Daily Calories (kcal)",
      "optional": "Optional",
      "notes": "Other Goals or Notes",
      "notesSubtitle": "Additional information about your personal goals and relevant conditions",
      "notesDescription": "Personal goals: such as improve sleep, boost energy, enhance athletic performance, etc.\nRelevant conditions: such as dietary preferences, lifestyle habits, health conditions, medications, etc. (optional, helps AI provide more precise recommendations)",
      "notesPlaceholder": "Share your personal goals and preferences to help AI serve you better...",
      "professionalMode": "Professional Mode",
      "professionalModeDescription": "Enable professional mode to provide more detailed health information for more precise AI recommendations",
      "medicalHistory": "Medical History, Allergies, Medications/Supplements, Family History",
      "medicalHistoryPlaceholder": "Please describe your existing medical conditions, allergies, medications or supplements you're taking (including dosage and reasons), and family medical history...",
      "lifestyle": "Food Preferences/Restrictions, Sleep Quality, Stress Level, Smoking/Drinking Habits",
      "lifestylePlaceholder": "Please describe your dietary preferences and restrictions, sleep quality, daily stress levels, smoking/drinking habits, and other lifestyle information...",
      "healthAwareness": "Health Awareness & Goal Expectations",
      "healthAwarenessPlaceholder": "Please share your understanding of your health status, expectations for calorie goals, willingness to change, and potential challenges you may face...",
      "saveGoals": "Save Health Goals"
    },

    "about": {
      "title": "About & Help",
      "privacyTitle": "Privacy Statement",
      "privacyDescription": "We value your privacy protection. This application stores your basic personal information (such as username, avatar), weight records, diet and exercise data, and API keys you voluntarily share with the community in the cloud to provide cross-device synchronization and community features. However, your personal private API keys and conversations with AI are always kept locally in your browser and will not be uploaded to our servers. Communication with AI models is only used to process your input and generate recommendations, and we do not store these conversation contents.",
      "usageTitle": "Usage Instructions",
      "quotaInfo": "After logging in via Linux.do OAuth2, you will receive daily usage quotas based on your trust level. We encourage users to share quality model configurations to build a community ecosystem.",
      "modelOptions": "You can use community shared models or configure private models.",
      "dataBackupTitle": "Data Backup",
      "dataBackupDescription": "The application uses cloud database storage. To ensure data safety, regular data export is strongly recommended as backup.",
      "usage1": "Record your diet and exercise on the homepage",
      "usage2": "Use text input or upload images to add records",
      "usage3": "Chat with AI assistant on the intelligent conversation page to get health advice",
      "usage4": "Set your model parameters on the AI configuration page",
      "usage5": "Regularly export your data to prevent data loss",
      "versionTitle": "Version Information",
      "versionInfo": "SnapFit AI Community Edition"
    },
    "ai": {
      "title": "AI Configuration",
      "agentModel": "Agent Model / Work Model",
      "agentModelDescription": "Model used for generating health recommendations and analysis",
      "chatModel": "Chat Model",
      "chatModelDescription": "Model used for intelligent conversation features",
      "visionModel": "Vision Model",
      "visionModelDescription": "Model used for image recognition and analysis",
      "baseUrl": "Base URL",
      "apiKey": "API Key",
      "modelName": "Model Name",
      "getModels": "Get Models",
      "saveConfig": "Save AI Configuration",
      "configIncomplete": "Configuration Incomplete",
      "fillAllFields": "Please fill in the name, Base URL and API Key for all models",
      "fillBaseUrlAndKey": "Please fill in Base URL and API Key first",
      "getSuccess": "Get Success",
      "modelsFound": "Successfully retrieved {count} available models",
      "getFailed": "Get Failed",
      "getModelsError": "Unable to retrieve model list, please check configuration",
      "testSuccess": "Test Success",
      "modelConnectionOk": "{modelType} model connection is normal",
      "testFailed": "Test Failed",
      "modelConnectionFailed": "{modelType} model connection failed, please check configuration",
      "configSaved": "Save Success",
      "configSavedDescription": "AI model configuration has been updated",
      "fetchModelsFailed": "Failed to fetch model list",
      "fetchSuccess": "Fetch Success",
      "fetchSuccessDesc": "Successfully retrieved {count} available models",
      "fetchFailed": "Fetch Failed",
      "fetchFailedDesc": "Unable to retrieve model list, please check configuration",
      "saveSuccess": "Save Success",
      "saveSuccessDesc": "AI model configuration has been updated",
      "baseUrlPlaceholder": "e.g., https://api.openai.com",
      "apiKeyPlaceholder": "Enter API Key",
      "selectModel": "Select Model",
      "modelNamePlaceholder": "e.g., gpt-4o",
      "fetchModels": "Fetch Models",
      "testConnection": "Test Connection",
      "privateConfig": "Private Configuration",
      "sharedPool": "Community Shared Pool",
      "networkDiagnostic": "Network Diagnostic",
      "cannotFetchModels": "Cannot Fetch Models",
      "fillApiUrlAndKey": "Please fill in API URL and Key first",
      "fetchModelsSuccess": "Fetch Models Success",
      "foundModels": "Found {count} available models",
      "fetchModelsFailed": "Fetch Models Failed",
      "networkErrorOrApiUnavailable": "Network error or API unavailable",
      "privateConfigIncomplete": "Private Configuration Incomplete",
      "sharedPoolConfigIncomplete": "Shared Pool Configuration Incomplete",
      "fillAllFieldsForModel": "Please fill in all fields for {modelType}",
      "selectSharedModelForModel": "Please select a shared model for {modelType}",
      "selectSharedKeysForModel": "Please select at least one shared key for {modelType} in manual mode",
      "testConnectionFailed": "Test Connection Failed",
      "selectSharedModel": "Step 1: Select Shared Model",
      "pleaseSelectModel": "Please select a model...",
      "selectRunMode": "Step 2: Select Run Mode",
      "autoBalance": "Auto Balance",
      "manualSpecify": "Manual Specify",
      "autoBalanceDescription": "The system will automatically select from all available keys that support {model}.",
      "selectSpecificKeys": "Select Specific Keys (Multiple Selection)",
      "selectSharedKeysPlaceholder": "Select one or more specific shared keys",
      "expertMemoryCleared": "{expertName}'s memory has been cleared",
      "memoryManagement": {
        "title": "AI Assistant Memory Management",
        "description": "View and manage the memory content of each AI assistant. AI assistants remember important user information to provide more personalized recommendations.",
        "noMemoryData": "No AI memory data available",
        "expertNames": {
          "general": "General Assistant",
          "nutrition": "Nutritionist",
          "exercise": "Exercise Expert",
          "metabolism": "Metabolism Expert",
          "behavior": "Behavior Expert",
          "timing": "Timing Expert"
        },
        "memoryPlaceholder": "AI assistant memory content...",
        "saving": "Saving",
        "unsaved": "Unsaved",
        "clearAllMemories": "Clear All AI Memories",
        "confirmClearTitle": "Confirm Clear All AI Memories",
        "confirmClearDescription": "This operation will clear all AI assistant memory content and cannot be recovered. AI assistants will lose their personalized understanding of you.",
        "cancel": "Cancel",
        "confirmClear": "Confirm Clear",
        "allMemoriesCleared": "All Memories Cleared",
        "allMemoriesClearedDescription": "All AI assistant memories have been cleared",
        "clearFailed": "Clear Failed",
        "memorySaved": "Memory Saved",
        "memorySavedDescription": "AI assistant memory has been automatically saved",
        "saveFailed": "Save Failed",
        "saveFailedDescription": "Memory save failed, please try again"
      }
    },
    "data": {
      "title": "Data Management",
      "description": "Export or import your health data, or clear all data",
      "exportData": "Export Data",
      "exportDescription": "Export all your health data as a JSON file for backup or migration",
      "exportAllData": "Export All Data",
      "importData": "Import Data",
      "importDescription": "Import health data from a previously exported JSON file",
      "clearData": "Clear Data",
      "clearDescription": "Clear all health log data, this operation cannot be undone",
      "clearAllData": "Clear All Data",
      "confirmClearTitle": "Confirm Clear Data",
      "confirmClearDescription": "This operation will permanently delete all health log data and cannot be recovered. Are you sure you want to continue?",
      "cancel": "Cancel",
      "confirmClear": "Confirm Clear",
      "exportSuccessTitle": "Export Successful",
      "exportSuccessDescription": "Your health data has been exported as a JSON file",
      "exportErrorTitle": "Export Failed",
      "exportErrorDescription": "Unable to export your health data",
      "importErrorTitle": "Import Failed",
      "importErrorDescription": "Unable to import your health data, please ensure the file format is correct",
      "importSuccessTitle": "Import Successful",
      "importSuccessDescription": "Your health data has been successfully imported",
      "importSuccessWithMemoryTitle": "Import Successful",
      "importSuccessWithMemoryDescription": "Your health data and AI memories have been successfully imported",
      "partialImportSuccessTitle": "Partial Import Successful",
      "partialImportSuccessDescription": "Health data imported successfully, but AI memory import failed",
      "clearSuccessTitle": "Clear Successful",
      "clearSuccessDescription": "All health log data has been cleared",
      "clearErrorTitle": "Clear Failed",
      "clearErrorDescription": "Unable to clear your health data",
      "selectFile": "Select File",
      "cloudSync": "Cloud Sync",
      "crossDeviceSync": "Cross-device data synchronization",
      "lastSync": "Last Sync",
      "syncingData": "Syncing data...",
      "syncNow": "Sync Now",
      "syncing": "Syncing...",
      "healthLogs": "Health Logs",
      "aiMemories": "AI Memories",
      "userProfile": "User Profile",
      "categorizedSync": "Categorized Sync",
      "pullMemories": "Pull Memories",
      "pushMemories": "Push Memories",
      "pullProfile": "Pull Profile",
      "pushProfile": "Push Profile",
      "developerOptions": "Developer Options",
      "clearThrottleState": "Clear Throttle State",
      "clearThrottleDescription": "Clear sync throttle state to allow immediate automatic sync",
      "dataSynced": "Data Synced",
      "notSyncedYet": "Not synced yet",
      "throttling": "Throttling",
      "throttlingMinutes": "Throttling ({minutes} minutes)",
      "fetchSharedKeysListFailed": "Failed to fetch shared keys list",
      "localSavedCloudSyncRetry": "Saved locally, cloud sync will retry later",
      "approachingLimit": "Approaching limit",
      "autoSaveIn3Seconds": "Auto-save in 3 seconds",
      "loadingSettings": "Loading settings..."
    }
  },
  "sync": {
    "info": {
      "title": "Syncing data"
    },
    "success": {
      "title": "Sync Successful",
      "syncTitle": "Sync Successful",
      "pullTitle": "Sync Successful",
      "pullDescription": "{count} records have been synced from the cloud.",
      "pushTitle": "Push Successful"
    },
    "error": {
      "title": "Sync Failed",
      "syncTitle": "Sync Failed",
      "unauthorized": {
        "title": "Unauthorized",
        "description": "You need to be logged in to sync data."
      },
      "pullFailed": "Failed to pull data from the cloud.",
      "pushFailed": "Failed to push data to the cloud.",
      "pullTitle": "Data Pull Error",
      "pushTitle": "Data Push Error"
    },
    "pullStarted": "Pulling latest data from the cloud...",
    "pullFinished": "Successfully pulled {count} records from the cloud.",
    "pushStarted": "Pushing local changes to the cloud...",
    "pushFinished": "Successfully pushed changes to the cloud.",
    "pushFailed": "Failed to push data to the cloud: {error}"
  },
  "smartSuggestions": {
    "noData": {
      "title": "Insufficient Data",
      "description": "Not enough data for {date} to generate suggestions."
    },
    "error": {
      "title": "Suggestion Generation Failed",
      "description": "Unable to generate smart suggestions, please try again later."
    },
    "unknownError": {
      "title": "Unknown Error",
      "description": "An unknown error occurred while generating suggestions."
    },
    "success": {
      "title": "Suggestions Updated",
      "description": "New smart suggestions have been generated for {date}."
    }
  },
  "sharedKeys": {
    "title": "Shared Key Pool",
    "subtitle": "Contribute your API Keys and share AI computing power with the community",
    "tabs": {
      "leaderboard": "Usage Leaderboard",
      "myConfigs": "My Configurations",
      "share": "Share API Key"
    },
    "trustLevel": {
      "loginRequired": "Login Required",
      "loginDescription": "Please login with your Linux.do account to use shared services",
      "loginButton": "Login to Linux.do",
      "insufficientTrust": "Insufficient Trust Level",
      "requiresLevel": "Shared services require trust level {level} or above",
      "currentLevel": "Your current trust level: {level}",
      "howToImprove": "How to improve trust level:",
      "improveTip1": "Actively participate in Linux.do community discussions",
      "improveTip2": "Post high-quality content and replies",
      "improveTip3": "Maintain good community behavior record",
      "visitCommunity": "Visit Linux.do Community"
    },
    "security": {
      "title": "Security & Control",
      "feature1": "API Keys encrypted storage for data security",
      "feature2": "Custom daily call limits for precise usage control",
      "feature3": "Real-time usage statistics with transparent call records",
      "feature4": "Edit or withdraw your configurations anytime"
    },
    "upload": {
      "title": "Share Your API Key",
      "keyName": "Configuration Name",
      "keyNamePlaceholder": "Give your configuration a name",
      "baseUrl": "Base URL",
      "baseUrlPlaceholder": "e.g., https://api.openai.com",
      "apiKey": "API Key",
      "apiKeyPlaceholder": "Enter your API Key",
      "dailyLimit": "Daily Limit",
      "dailyLimitDescription": "Set maximum daily calls",
      "description": "Description",
      "descriptionPlaceholder": "Briefly describe this configuration's features",
      "tags": "Tags",
      "tagsPlaceholder": "Add tags",
      "addTag": "Add Tag",
      "detectModels": "Detect Models",
      "detecting": "Detecting...",
      "availableModels": "Available Models",
      "modelFilter": "Filter Models",
      "selectModels": "Select models to share",
      "testConnection": "Test Connection",
      "testing": "Testing...",
      "uploadKey": "Upload Configuration",
      "uploading": "Uploading...",
      "selectAll": "Select All",
      "deselectAll": "Deselect All",
      "selectedCount": "Selected {count} models",
      "noModelsDetected": "No models detected",
      "pleaseDetectFirst": "Please detect available models first",
      "pleaseSelectModel": "Please select at least one model",
      "readyToShare": "Ready to share, your API Key will be securely encrypted",
      "sharing": "Sharing...",
      "shareToComm": "Share to Community",
      "shareDescription": "After sharing, your configuration will help community users better use AI services",
      "networkError": "Network error, please try again later",
      "retryLater": "Please try again later",
      "unlimited": "Unlimited",
      "quickSelect": "Quick Select:",
      "customTags": "Custom Tags:",
      "selected": "Selected:",
      "cautionUse": "(Use with caution)",
      "supportUsers": "Can support approximately",
      "usersCount": "users",
      "completeShare": "Complete Sharing",
      "basicConfig": "Basic Configuration",
      "basicConfigDesc": "Fill in your API basic information",
      "configDetails": "Configuration Details",
      "configDetailsDesc": "Set usage limits and description information",
      "testRequiredFields": "Please fill in API URL and Key first",
      "testSuccessWithModels": "API connection successful! Found {count} available models, please select models to share below.",
      "testSuccessNoModels": "Connection successful, but unable to automatically detect model list.",
      "apiConnectionFailed": "API connection failed",
      "fillRequiredFields": "Please fill in all required fields",
      "authFailed": "Authentication failed",
      "sessionInvalid": "Session invalid, please login again",
      "errors": {
        "invalidBaseUrl": "Invalid API URL format",
        "missingFields": "Missing required fields: API URL, API Key, model name",
        "missingUploadFields": "Missing required fields: configuration name, API URL, API Key and available models",
        "invalidDailyLimit": "Daily limit must be between 150-99999, or 999999 for unlimited",
        "serverError": "Internal server error",
        "urlBlocked": "URL blocked: Official API addresses or sensitive domains not allowed",
        "urlInvalid": "Invalid URL format: Please check URL format"
      },
      "urlValidation": {
        "passed": "URL validation passed",
        "blocked": "This URL is blocked and not allowed",
        "invalid": "Invalid URL format",
        "localAddress": "Local addresses not allowed",
        "invalidProtocol": "Only HTTP and HTTPS protocols supported",
        "empty": "URL cannot be empty",
        "tips": {
          "support": "Third-party API proxy services supported",
          "security": "Official API addresses blocked for community security"
        },
        "placeholder": "Enter API service URL"
      },
      "messages": {
        "testSuccess": "Connection test successful",
        "testFailed": "Connection test failed",
        "uploadSuccess": "Upload successful",
        "uploadSuccessDesc": "Thank you for sharing your API Key!",
        "uploadFailed": "Upload failed",
        "detectSuccess": "Detection successful",
        "detectSuccessDesc": "Found {count} available models",
        "detectFailed": "Detection failed",
        "detectFailedDesc": "Unable to get model list, please check configuration"
      }
    },
    "benefits": {
      "title": "Benefits of Sharing",
      "benefit1": "Share API costs with other users, reducing personal expenses",
      "benefit2": "Fully utilize API quotas, avoiding resource waste",
      "benefit3": "Flexible usage control, can adjust or disable anytime",
      "benefit4": "Get detailed usage statistics and cost analysis"
    },
    "thanksBoard": {
      "title": "Thanks Board - API Key Contributors",
      "currentlyUsing": "Currently Using",
      "contributorSharing": "{contributor} shared {model}",
      "stats": {
        "contributors": "Contributors",
        "totalCalls": "calls",
        "activeKeys": "Active Keys"
      },
      "loading": "Loading...",
      "loadFailed": "Load Failed",
      "loadFailedDesc": "Unable to load thanks board",
      "networkError": "Network error, please try again later"
    },
    "leaderboard": {
      "title": "Usage Leaderboard",
      "description": "View available API configurations, sorted by usage, with real-time model health status",
      "configName": "Configuration Name",
      "contributor": "Contributor",
      "model": "Model",
      "dailyUsage": "Daily Usage",
      "totalUsage": "Total Usage",
      "status": "Status",
      "active": "Active",
      "inactive": "Inactive",
      "loading": "Loading leaderboard data...",
      "noData": "No configurations available",
      "noDataDesc": "Be the first to share an API configuration",
      "refreshData": "Refresh Data",
      "perDay": "day"
    },
    "myConfigs": {
      "title": "My Configurations",
      "description": "Manage all your shared API configurations, including disabled ones",
      "noConfigs": "You don't have any configurations yet",
      "shareFirst": "Click 'Share API Key' to create your first configuration",
      "configName": "Configuration Name",
      "model": "Model",
      "dailyLimit": "Daily Limit",
      "todayUsage": "Today",
      "totalUsage": "times used",
      "status": "Status",
      "actions": "Actions",
      "edit": "Edit",
      "delete": "Delete",
      "active": "Active",
      "inactive": "Disabled",
      "confirmDelete": "Confirm Delete",
      "deleteWarning": "Are you sure you want to delete configuration \"{name}\"? This action cannot be undone.",
      "deleteSuccess": "Delete successful",
      "deleteSuccessDesc": "Configuration deleted",
      "deleteFailed": "Delete failed"
    }
  }
}
